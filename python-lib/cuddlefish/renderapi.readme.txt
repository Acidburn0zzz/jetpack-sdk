
This document describes the structure of the HTML generated by the renderapi.py
tool, both for use in the API docs shown by "cfx docs" and as exported by
"cfx sdocs". The particular HTML id and class attributes embedded in the files,
as well as their organization, represent the interface between the tool and any
front-end code wanting to style the docs in some different way.

renderapi generates two sorts of files:

- a file called "<module-name>.div.html": this is the contents of the parsed
Markdown file rendered inside a well-defined DIV tag

- a file called "<module-name>.html": this is the DIV from above inserted into
a simple HTML template that references a sample CSS file which styles the
contents of the DIV. This CSS file is the same as the one used by the SDK
itself.

DIV tag structure
-----------------
The following class and id attributes are used in the DIV:

renderapi uses a number of class attributes and a single id attribute in the DIV:

id attribute    <module_name>"_module_api_docs"
class attribute "api_reference"
class attribute "module_api_docs"
class attribute "api_header"
class attribute "api_name"
class attribute "api_component_group"
class attribute "api_component"
class attribute "datatype"
class attribute "returns"
class attribute "parameter_set"
class attribute "module_description"

Outer tags
----------
The outer DIV tags includes the id attribute and the "module_api_docs" class
attribute:

  <div id='tabs_module_api_docs' class='module_api_docs'> 
    //module doc contents
  </div>

Description
-----------
Inside this all "markdown" hunks (that is, all descriptive text not occurring
inside <api></api> tags) is rendered inside a DIV marked with the
"module-description" class attribute:

<div id='tabs_module_api_docs' class='module_api_docs'> 
  <div class='module_description'>
    //descriptions
  </div>  
</div>

API Reference
-------------
After this all <api></api> content is rendered, enclosed in a single tag marked
with the "api_reference" attribute:

<div id='tabs_module_api_docs' class='module_api_docs'> 
  <div class='module_description'>
    //descriptions
  </div>  
  <div class='api_reference'>
    //api reference
  </div>
</div>

If there is no <api></api> content, then this entire section is absent.

The first item in API reference is a top level title marked with the
"api_header" attribute. This might have the text content "API Reference"
(but you should not rely on that):

  <div class='api_reference'>

    <div class='api_header'>
      API Reference
    </div>
    //api contents

  </div>

After the title come one or more sections marked with the "api_component_group"
attribute. The component group is a collection of some sort of component. Each
component group starts off with a header marked with the "api_header" attribute
and is followed by one or more sections marked with the "api_component"
attribute:

  <div class='api_reference'>

    <div class='api_header'>
      API Reference
    </div>

    <div class='api_component_group'>

      <div class='api_header'>
        Bananas
      </div>

      <div class='api_component'>
        // the first banana
      </div>

      <div class='api_component'>
        // another banana
      </div>    

    </div>

    <div class='api_component_group'>
      //some different components

      <div class='api_header'>
        Sheep
      </div>

      <div class='api_component'>
        // A wooly sheep
      </div>

      <div class='api_component'>
        // A bald sheep
      </div>

    </div>

At the top level, component groups probably group things like classes,
functions, properties and events.

API components represent actual objects in the API like classes, functions,
properties and events. Each component starts with a section marked with the
"api_name" tag, which includes the name of the component in the API: for
example "postMessage(message)". If the component is composite then it may
contain its own component group.
